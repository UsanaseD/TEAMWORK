{
  "swagger": "2.0",
  "info": {
    "description": "Teamwork is an ​internal social network for organizations’ employees. The goal of this application is to facilitate more interaction between colleagues and facilitate team bonding. ",
    "version": "1",
    "title": "TEAMWORK"
  },
  "host": "teamworkd.herokuapp.com",
  "basePath": "/api/v1/",
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User SignUp",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User creation",
            "schema": {
              "$ref": "#/definitions/signup"
            }
          }
        ],
        "responses": {
        "201": {"description": "created!"},
        "200": {"description": "passed!"},
        "400": {"description": " Bad Request!"},
        "401": {"description": "Unauthorised!"},
        "403": {"description": "permission denied!"},
        "409": {"description": "conflict!"},
        "500": {"description": "Server Error!"}

        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User Login",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "user login",
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "responses": {
          "201": {"description": "created!"},
          "200": {"description": "passed!"},
          "400": {"description": " Bad Request!"},
          "401": {"description": "Unauthorised!"},
          "403": {"description": "permission denied!"},
          "409": {"description": "conflict!"},
          "500": {"description": "Server Error!"}
        }
      }
    },

    "/article": {
      "post": {
        "tags": [
          "article"
        ],
        "summary": "article Creation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "cllient token",
            "required": true
          },
          {
            "name": "create an article",
            "in": "body",
            "description": "enter article definition",
            "schema": {
              "$ref": "#/definitions/article"
            }
          }
        ],
        "responses": {
          "201": {"description": "created!"},
          "200": {"description": "passed!"},
          "400": {"description": " Bad Request!"},
          "401": {"description": "Unauthorised!"},
          "403": {"description": "permission denied!"},
          "409": {"description": "conflict!"},
          "500": {"description": "Server Error!"}
        }
      },
       "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get all articles",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "client token",
            "required": true
          }
        ],
        "responses": {
          "201": {"description": "created!"},
          "200": {"description": "passed!"},
          "400": {"description": " Bad Request!"},
          "401": {"description": "Unauthorised!"},
          "403": {"description": "permission denied!"},
          "409": {"description": "conflict!"},
          "500": {"description": "Server Error!"}
        }
      }
      },

 "/article/{id}": {   
"get":{
        "tags":[
            "article"
        ],
        "summary":"get specific article",
        "produces":[
            "application/json"
        ],

            "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "type": "string",
          "description": "client token",
          "required": true
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "article id"
        }
      ],
      "responses": {
        "201": {"description": "created!"},
        "200": {"description": "passed!"},
        "400": {"description": " Bad Request!"},
        "401": {"description": "Unauthorised!"},
        "403": {"description": "permission denied!"},
        "409": {"description": "conflict!"},
        "500": {"description": "Server Error!"}
      }
    },

    "delete":{
          "tags":[
              "article"
          ],
          "summary":"delete a specific article",
          "produces":[
              "application/json"
          ],

              "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "Admin token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "article id"
          }
        ],
        "responses": {
          "201": {"description": "created!"},
          "200": {"description": "passed!"},
          "400": {"description": " Bad Request!"},
          "401": {"description": "Unauthorised!"},
          "403": {"description": "permission denied!"},
          "409": {"description": "conflict!"},
          "500": {"description": "Server Error!"}
        }
    },

    "patch":{
      "tags":[
          "article"
      ],
      "summary":"update a specific article",
      "produces":[
          "application/json"
      ],

          "parameters": [
      {
        "name": "Authorization",
        "in": "header",
        "type": "string",
        "description": "client token",
        "required": true
      },
      {
        "name": "id",
        "in": "path",
        "required": true,
        "type": "integer",
        "description": "article id"
      },
      {
        "name": "update article",
        "in": "body",
        "required": true,
        "description": "article body",
        "schema": {
          "$ref": "#/definitions/articlepatch"
        }
      }
    ],
    "responses": {
      "201": {"description": "created!"},
      "200": {"description": "passed!"},
      "400": {"description": " Bad Request!"},
      "401": {"description": "Unauthorised!"},
      "403": {"description": "permission denied!"},
      "409": {"description": "conflict!"},
      "500": {"description": "Server Error!"}
    }
  }
},
  
    "/comment": {
      "post": {
        "tags": [
          "comment"
        ],
        "summary": "create a comment.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "Client token",
            "required": true
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment creation",
            "schema": {
              "$ref": "#/definitions/comment"
            }
          }
        ],
        "responses": {
          "201": {"description": "created!"},
          "200": {"description": "passed!"},
          "400": {"description": " Bad Request!"},
          "401": {"description": "Unauthorised!"},
          "403": {"description": "permission denied!"},
          "409": {"description": "conflict!"},
          "500": {"description": "Server Error!"}
        }
      }
    },
    
    "/articleflag": {
      "post": {
        "tags": [
          "articleflag"
        ],
        "summary": "flag a posted article.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "Client token",
            "required": true
          },
          {
            "name": "articleflag",
            "in": "body",
            "description": "report or flag a posted article",
            "schema": {
              "$ref": "#/definitions/articleflag"
            }
          }
        ],
        "responses": {
          "201": {"description": "created!"},
          "200": {"description": "passed!"},
          "400": {"description": " Bad Request!"},
          "401": {"description": "Unauthorised!"},
          "403": {"description": "permission denied!"},
          "409": {"description": "conflict!"},
          "500": {"description": "Server Error!"}
        }
      }
    },
    "/commentflag": {
      "post": {
        "tags": [
          "commentflag"
        ],
        "summary": "flag a posted comment.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "Client token",
            "required": true
          },
          {
            "name": "commentflag",
            "in": "body",
            "description": "report or flag a posted comment",
            "schema": {
              "$ref": "#/definitions/commentflag"
            }
          }
        ],
        "responses": {
          "201": {"description": "created!"},
          "200": {"description": "passed!"},
          "400": {"description": " Bad Request!"},
          "401": {"description": "Unauthorised!"},
          "403": {"description": "permission denied!"},
          "409": {"description": "conflict!"},
          "500": {"description": "Server Error!"}
        }
      }
    },

  "/reparticle":{
    "get": {
      "tags": [
        "reportedArticle"
      ],
      "summary": "Get all reported articles",
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "type": "string",
          "description": "admin token",
          "required": true
        }
      ],
      "responses": {
        "201": {"description": "created!"},
        "200": {"description": "passed!"},
        "400": {"description": " Bad Request!"},
        "401": {"description": "Unauthorised!"},
        "403": {"description": "permission denied!"},
        "409": {"description": "conflict!"},
        "500": {"description": "Server Error!"}
      }
    }
  }
},

"definitions": {
  "signup": {
    "type": "object",
    "properties": {
      "email": {
        "type": "string"
      },
      "firstname": {
        "type": "string"
      },
      "lastname": {
        "type": "string"
      },
      "address":{
        "type":"string"
      },
      "gender":{
        "type":"string"
      },
      "jobtitle":{

        "type":"string"
      },
      "depart":{
        "type":"string"
      },

      "admin":{
        "type":"boolean"
      },         
      "password": {
        "type": "string"
      }
    }
  },

  "login": {
    "type": "object",
    "properties": {
      "email": {
        "type": "string"
      },
      "password": {
        "type": "string"
      }
    }
  },

  "article":{
    "type":"object",
    "properties":{
        "category":{
            "type":"string"
        },
        "title":{
            "type":"string"
        },
        "body":{
            "type":"string"
        }
    }
},

"articlepatch":{
  "type":"object",
  "properties":{

      "category":{
          "type":"string"
      },
      "title":{
          "type":"string"
      },
      "body":{
          "type":"string"
      }
  }
},

"comment":{
    "type":"object",
    "properties":{
        "article_id":{
            "type":"integer"
        },
        "comment":{
            "type":"string"
        } 
    }
},
  "articleflag": {
    "type": "object",
    "properties": {
      "article_id": {
        "type": "integer"
      },
      "reason": {
        "type": "string"
      },
      "description": {
        "type": "string"
      }

    }
  },
  "commentflag": {
    "type": "object",
    "properties": {
      "comment_id": {
        "type": "integer"
      },
      "reason": {
        "type": "string"
      },
      "description": {
        "type": "string"
      }

    }
  }
}

}